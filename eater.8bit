#using "implements.cpp"
class 8bit(
	module benEaterClk (int mode,int ss,int clk,int hlt,int out)(
	// creates a module similar to function.

		// def (<i/o>, variable) ≡ pinMode(variable,i/o);
		def (input, mode); // switch between modes
		def (input, ss); // single step mode
		def (input, clk); // clock mode
		def (input, hlt); // halts clock module
		def (output, out); // the output
		if(!hlt)(
			if(mode)(
				out=clk;
			) else(
				out = ss;
			)
		) else(
			out = false;
		)
	)
	module dataDirection(enable, direction, int inA[8], int inBs[8], int out[8])(
		if (enable) (
			if(direction) (
				
			)
		)
	)
	module aReg(int bus[8],int clk,int clr,int AI,int AO,int out[8])(
		def (input, bus); //≡ to for(int num:bus){def(input,bus[num])}
		
	)
)
